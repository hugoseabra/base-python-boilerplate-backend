name: Boilerplate CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [ opened, reopened, ready_for_review, synchronize ]
    branches: [ "main" ]

jobs:
    build:
      runs-on: ubuntu-latest
      strategy:
        max-parallel: 4

      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare environment variables
        run: cp .env-sample .env

      - name: Setup docker-compose
        uses: ./.github/actions/docker-compose-setup

      - name: Start services
        uses: ./.github/actions/docker-compose-start
        with:
          file: ./docker-compose.yml

      - name: Run Tests
        uses: ./.github/actions/docker-compose-run
        with:
          service: api
          file: ./docker-compose.yml
          command: coverage run manage.py test --verbosity 3

      - name: Show coverage report
        uses: ./.github/actions/docker-compose-run
        with:
          service: api
          file: ./docker-compose.yml
          command: coverage report

      - name: Save coverage artifact
        uses: ./.github/actions/docker-compose-run
        with:
          service: api
          file: ./docker-compose.yml
          command: coverage xml -o coverage/report.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/report.xml
          badge: true
          format: 'markdown'
          output: 'file'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Check deployment configs
        uses: ./.github/actions/docker-compose-run
        with:
          service: api
          file: ./docker-compose.yml
          additional-args: -e DEBUG=false
          command: python manage.py check --deploy

      - name: Stop services
        uses: ./.github/actions/docker-compose-stop
        if: always()
        with:
          file: ./docker-compose.yml
